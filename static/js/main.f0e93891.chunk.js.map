{"version":3,"sources":["components/Home.js","components/FlagCard.js","components/GuessingControls.js","components/SuccessBox.js","components/FailureBox.js","constants/regions.js","constants/FLAG_DATA.js","constants/stages.js","containers/Game.js","containers/App.js","serviceWorker.js","index.js"],"names":["Title","styled","h1","_templateObject","Instructions","h4","_templateObject2","Grid","div","_templateObject3","GridItem","_templateObject4","RegionIcon","_ref","region","active","react_default","a","createElement","style","opacity","src","concat","width","Region","props","onMouseOver","onHover","onMouseOut","onLeave","onClick","e","preventDefault","className","children","Home","_useState","useState","_useState2","Object","slicedToArray","setRegion","_useState3","_useState4","hoveredRegion","setHoveredRegion","createRegion","text","value","Home_Region","Home_RegionIcon","react_router_dom","to","class","type","placeholder","FlagWrapper","FlagCard_templateObject","FlagCard","url","Guess","guess","Guesses","_ref2","guesses","length","map","GuessingControls_Guess","CenteredForm","form","GuessingControls_templateObject","GuessingControls","setGuesses","setGuess","dumbify","input","toLowerCase","replace","trim","autoFocus","onChange","target","toConsumableArray","rawInput","name","data","accepts","some","acceptable","validate","onSuccess","onSkip","onGiveUp","GuessingControls_Guesses","SuccessBox","n","s","v","getOrdinal","onNext","FailureBox","ASIA","FLAG_DATA","regions","GUESSING","SUCCESS","GIVE_UP","Game","state","doingStack","_this","initializeStack","rightStack","wrongStack","stage","stack","current","setState","objectSpread","slice","onFail","success","_this$setState","moveToStack","defineProperty","convertStageToComponents","Fragment","components_FlagCard","components_GuessingControls","components_SuccessBox","components_FailureBox","options","arguments","undefined","filter","flag","includes","seed","Math","random","toString","substring","shuffle","item","this","Component","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"y5BAIA,IAAMA,EAAQC,IAAOC,GAAVC,KAMLC,EAAeH,IAAOI,GAAVC,KAIZC,EAAON,IAAOO,IAAVC,KAMJC,EAAWT,IAAOO,IAAVG,KAWRC,EAAa,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,OAAQC,EAAaF,EAAbE,OAC5B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,QAASL,EAAS,EAAI,KAClCC,EAAAC,EAAAC,cAAA,OAAKG,IAAG,WAAAC,OAAaR,EAAb,aAAgCS,MAAM,WAK9CC,EAAS,SAAAC,GAcb,OACET,EAAAC,EAAAC,cAACR,EAAD,CAAUgB,YAdI,WACdD,EAAME,QAAQF,EAAMX,SAaYc,WAVlB,WACdH,EAAMI,QAAQJ,EAAMX,SASiCgB,QANvC,SAAAC,GACdA,EAAEC,iBACFP,EAAMK,QAAQL,EAAMX,UAKjBW,EAAMV,OACLC,EAAAC,EAAAC,cAAA,UAAQe,UAAS,gDAAmDR,EAAMS,UAE1ET,EAAMS,WAyDCC,EAnDF,SAAAV,GAAS,IAAAW,EACQC,mBAAS,OADjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbtB,EADawB,EAAA,GACLG,EADKH,EAAA,GAAAI,EAEsBL,mBAAS,OAF/BM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEbE,EAFaD,EAAA,GAEEE,EAFFF,EAAA,GAIdG,EAAe,SAACC,EAAMC,GAC1B,OACEhC,EAAAC,EAAAC,cAAC+B,EAAD,CACEtB,QAAS,kBAAMkB,EAAiBG,IAChCnB,QAAS,kBAAMgB,EAAiB/B,IAChCgB,QAAS,kBAAMW,EAAUO,IACzBjC,OAAQD,IAAWkC,GAElBD,IAKP,OACE/B,EAAAC,EAAAC,cAAA,OAAKe,UAAU,oBACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACbjB,EAAAC,EAAAC,cAAClB,EAAD,0BAEFgB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACbjB,EAAAC,EAAAC,cAACd,EAAD,kCACAY,EAAAC,EAAAC,cAACX,EAAD,KACGuC,EAAa,QAAS,OACtBA,EAAa,gBAAiB,MAC9BA,EAAa,gBAAiB,MAC9BA,EAAa,SAAU,MACxB9B,EAAAC,EAAAC,cAACgC,EAAD,CAAYpC,OAAQ8B,EAAe7B,OAAQ6B,IAAkB9B,IAC5DgC,EAAa,SAAU,OACvBA,EAAa,OAAQ,QACrBA,EAAa,cAAe,MAC5BA,EAAa,UAAW,SAE3B9B,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMC,GAAI,SACRpC,EAAAC,EAAAC,cAAA,UAAQe,UAAU,2BAAlB,OAIFjB,EAAAC,EAAAC,cAAA,OAAKmC,MAAM,yBAAX,MACArC,EAAAC,EAAAC,cAACd,EAAD,6CACAY,EAAAC,EAAAC,cAAA,OAAKmC,MAAM,yBACTrC,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,OAAOC,YAAY,kBAC/BvC,EAAAC,EAAAC,cAAA,UAAQe,UAAU,aAAlB,iNCzGV,IAAMuB,EAAcvD,IAAOO,IAAViD,KAiBFC,EAVE,SAAA7C,GAAA,IAAG8C,EAAH9C,EAAG8C,IAAH,OACf3C,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,oBACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SACbjB,EAAAC,EAAAC,cAAA,OAAKG,IAAKsC,wJCXlB,IAAMC,EAAQ,SAAA/C,GAAA,IAAGgD,EAAHhD,EAAGgD,MAAH,OACZ7C,EAAAC,EAAAC,cAAA,OAAKe,UAAU,QACbjB,EAAAC,EAAAC,cAAA,KAAGmC,MAAM,8BACTrC,EAAAC,EAAAC,cAAA,OAAKmC,MAAM,WAAWQ,KAIpBC,EAAU,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QACjB,OAAsB,GAAlBA,EAAQC,OAAoB,KAG9BjD,EAAAC,EAAAC,cAAA,OAAKmC,MAAM,iBACTrC,EAAAC,EAAAC,cAAA,OAAKmC,MAAM,mBACRW,EAAQE,IAAI,SAAAL,GAAK,OAChB7C,EAAAC,EAAAC,cAACiD,EAAD,CAAON,MAAOA,SAOlBO,EAAenE,IAAOoE,KAAVC,KA+FHC,EAzFU,SAAA9C,GAAS,IAAAW,EAEFC,mBAASZ,EAAMuC,SAAW,IAFxB1B,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEzB4B,EAFyB1B,EAAA,GAEhBkC,EAFgBlC,EAAA,GAAAI,EAGNL,mBAAS,IAHHM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGzBmB,EAHyBlB,EAAA,GAGlB8B,EAHkB9B,EAAA,GAK1B+B,EAAU,SAAAC,GAMd,OALeA,EACZC,cACAC,QAAQ,sBAAuB,IAC/BA,QAAQ,UAAW,KACnBC,QAgDL,OACE9D,EAAAC,EAAAC,cAAA,OAAKe,UAAU,oBACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACbjB,EAAAC,EAAAC,cAACkD,EAAD,CAAcnC,UAAU,WACtBjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SACbjB,EAAAC,EAAAC,cAAA,SACEoC,KAAK,OACLC,YAAY,qBACZwB,WAAS,EACT/B,MAAOa,EACPmB,SAAU,SAAAjD,GAAC,OAAI0C,EAAS1C,EAAEkD,OAAOjC,WAGrChC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,UAAQe,UAAU,oBAAoBH,QA/ChC,SAAAC,GACdA,EAAEC,iBAEG6B,IAELW,EAAU,GAAAlD,OAAAiB,OAAA2C,EAAA,EAAA3C,CAAKyB,GAAL,CAAcH,KAhBT,SAAAsB,GACf,IAAMR,EAAQD,EAAQS,GAEhBC,EAAO3D,EAAM4D,KAAKD,KAClBE,EAAU7D,EAAM4D,KAAKC,SAAW,GAItC,MAFoB,CAACF,GAAD9D,OAAAiB,OAAA2C,EAAA,EAAA3C,CAAU+C,IAASpB,IAAI,SAAAjD,GAAC,OAAIyD,EAAQzD,KAErCsE,KAAK,SAAAC,GAAU,OAAIb,GAASa,IAU3CC,CAAS5B,KACXpC,EAAMiE,UAAU1B,GAChBQ,EAAW,KAGbC,EAAS,OAmCD,SAGAzD,EAAAC,EAAAC,cAAA,UAAQe,UAAU,YAAYH,QAnCzB,SAAAC,GACbA,EAAEC,iBAEFP,EAAMkE,OAAO3B,GAEbS,EAAS,IACTD,EAAW,MA6BH,QAGAxD,EAAAC,EAAAC,cAAA,UAAQe,UAAU,qBAAqBH,QA7BhC,SAAAC,GACfA,EAAEC,iBAEFP,EAAMmE,SAAS5B,GAEfS,EAAS,IACTD,EAAW,MAuBH,cAMNxD,EAAAC,EAAAC,cAAC2E,EAAD,CAAS7B,QAASA,MChFT8B,EA/BI,SAAArE,GAajB,OACET,EAAAC,EAAAC,cAAA,OAAKe,UAAU,oBACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACbjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,UAAhB,YACAjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,eAAf,WACaR,EAAM4D,KAAKD,KADxB,oBAfa,SAAAW,GACjB,IAAMC,EAAI,CAAC,KAAM,KAAM,KAAM,MACvBC,EAAIF,EAAI,IACd,OAAOA,GAAKC,GAAGC,EAAI,IAAM,KAAOD,EAAEC,IAAMD,EAAE,IAaSE,CAAWzE,EAAM4D,KAAKrB,QAAQC,OAAS,GADtF,UAKFjD,EAAAC,EAAAC,cAAA,OAAKe,UAAU,iBACfjB,EAAAC,EAAAC,cAAA,UAAQe,UAAU,YAAYqB,KAAK,SAASxB,QAfjC,SAAAC,GACbA,EAAEC,iBACFP,EAAM0E,UAayDpB,WAAS,GAAtE,WCCSqB,EAxBI,SAAA3E,GAOjB,OACET,EAAAC,EAAAC,cAAA,OAAKe,UAAU,oBACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,QAAf,6BAGAjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,UAAUR,EAAM4D,KAAKD,OAEvCpE,EAAAC,EAAAC,cAAA,OAAKe,UAAU,iBACbjB,EAAAC,EAAAC,cAAA,UAAQe,UAAU,YAAYqB,KAAK,SAASxB,QAdnC,SAAAC,GACbA,EAAEC,iBACFP,EAAM0E,UAY2DpB,WAAS,GAAtE,WCbKsB,EAAO,OC+/BLC,EAngCG,CACd,CACIlB,KAAM,cACNzB,IAAK,gCACL4C,QAAS,CAACF,EDCS,OCCvB,CACIjB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDPK,QCSlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDXK,QCalB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDjBK,QCmBlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDrBK,QCuBlB,CACInB,KAAM,sBACNzB,IAAK,wCACL4C,QAAS,CD7BY,KAMJ,UCyBrB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CDjCY,OCmCzB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,YACNzB,IAAK,8CACL4C,QAAS,CD7CM,SC+CnB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD/CK,QCiDlB,CACInB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,UACNzB,IAAK,gCACL4C,QAAS,CD3DY,KAMJ,UCuDrB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CAACF,ED3DS,OC6DvB,CACIjB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CD1EY,KAMJ,UCsErB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD7EK,QC+ElB,CACInB,KAAM,UACNzB,IAAK,wCACL4C,QAAS,CDlFK,QCoFlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDzFY,OC2FzB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CD3FK,QC6FlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,UACNzB,IAAK,wCACL4C,QAAS,CDvGY,OCyGzB,CACInB,KAAM,yBACNzB,IAAK,2CACL2B,QAAS,CAAC,UACViB,QAAS,CD5GK,QC8GlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDhHK,QCkHlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDvHY,OCyHzB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDhIK,QCkIlB,CACInB,KAAM,eACNzB,IAAK,iCACL4C,QAAS,CDpIK,QCsIlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDzIK,QC2IlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDnJK,QCqJlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD3JY,OC6JzB,CACInB,KAAM,aACNzB,IAAK,+BACL2B,QAAS,CAAC,cACViB,QAAS,CD9JK,QCgKlB,CACInB,KAAM,2BACNzB,IAAK,iDACL2B,QAAS,CAAC,OACViB,QAAS,CDpKK,QCsKlB,CACInB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CDzKK,QC2KlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDhLY,OCkLzB,CACInB,KAAM,QACNzB,IAAK,qDACL2B,QAAS,CAAC,8BACViB,QAAS,CAACF,IAEd,CACIjB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CD3LY,OC6LzB,CACInB,KAAM,UACNzB,IAAK,gCACL4C,QAAS,CD9LK,QCgMlB,CACInB,KAAM,mCACNzB,IAAK,yDACL2B,QAAS,CAAC,OACViB,QAAS,CDpMK,QCsMlB,CACInB,KAAM,wBACNzB,IAAK,8CACL4C,QAAS,CDzMK,QC2MlB,CACInB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CDjNY,OCmNzB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDpNK,QCsNlB,CACInB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CD3NY,KAMJ,UCuNrB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD9NK,QCgOlB,CACInB,KAAM,iBACNzB,IAAK,uCACL4C,QAAS,CDnOK,QCqOlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDxOK,QC0OlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CD5OK,QC8OlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDpPY,KAMJ,UCgPrB,CACInB,KAAM,qBACNzB,IAAK,2CACL4C,QAAS,CDzPY,KAMJ,UCqPrB,CACInB,KAAM,aACNzB,IAAK,+BACL2B,QAAS,CAAC,eACViB,QAAS,CAACF,IAEd,CACIjB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDnQY,OCqQzB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDtQK,QCwQlB,CACInB,KAAM,cACNzB,IAAK,gCACL4C,QAAS,CD9QY,OCgRzB,CACInB,KAAM,oBACNzB,IAAK,sCACL4C,QAAS,CDhRK,QCkRlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDrRK,QCuRlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD3RK,QC6RlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CD/RK,QCiSlB,CACInB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CDxSM,SC0SnB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD1SK,QC4SlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD/SK,QCiTlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDnTK,QCqTlB,CACInB,KAAM,SACNzB,IAAK,+BACL4C,QAAS,CDxTK,QC0TlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDnUK,QCqUlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDvUK,QCyUlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD7UK,QC+UlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDpVY,KAMJ,UCgVrB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CDzVY,OC2VzB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD3VK,QC6VlB,CACInB,KAAM,gBACNzB,IAAK,kCACL4C,QAAS,CDhWK,QCkWlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDvWY,OCyWzB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CD7WY,KAMJ,UCyWrB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDlXY,OCoXzB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDrXK,QCuXlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD1XK,QC4XlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CAACF,EDtYS,OCwYvB,CACIjB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CAACF,ED3YS,OC6YvB,CACIjB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDnZK,QCqZlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CD7ZK,QC+ZlB,CACInB,KAAM,mBACNzB,IAAK,yCACL2B,QAAS,CAAC,cAAe,iBACzBiB,QAAS,CDlaK,QCoalB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD1aY,KAMJ,UCsarB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CAACF,ED/aS,OCibvB,CACIjB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CD3bK,QC6blB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDpcM,SCscnB,CACInB,KAAM,cACNzB,IAAK,gCACL2B,QAAS,CAAC,wCAAyC,aAAc,aAAc,kBAC/EiB,QAAS,CAACF,IAEd,CACIjB,KAAM,cACNzB,IAAK,gCACL2B,QAAS,CAAC,qBACViB,QAAS,CAACF,IAEd,CACIjB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CAACF,ED/cS,OCidvB,CACIjB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDjeK,QCmelB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CAACF,EDneS,OCqevB,CACIjB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD1eK,QC4elB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD/eK,QCiflB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDpfK,QCsflB,CACInB,KAAM,gBACNzB,IAAK,kCACL4C,QAAS,CD1fK,QC4flB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CD/fK,QCigBlB,CACInB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CDpgBK,QCsgBlB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CDzgBK,QC2gBlB,CACInB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CD7gBK,QC+gBlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDlhBK,QCohBlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CDjiBK,QCmiBlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDviBK,QCyiBlB,CACInB,KAAM,mBACNzB,IAAK,yCACL4C,QAAS,CD/iBM,SCijBnB,CACInB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CDhjBK,QCkjBlB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CDrjBK,QCujBlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD7jBY,OC+jBzB,CACInB,KAAM,aACNzB,IAAK,uDACL4C,QAAS,CDnkBM,SCqkBnB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDrkBK,QCukBlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD1kBK,QC4kBlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CDplBK,QCslBlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDxlBK,QC0lBlB,CACInB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CD7lBK,QC+lBlB,CACInB,KAAM,UACNzB,IAAK,4BACL2B,QAAS,CAAC,SACViB,QAAS,CAACF,IAEd,CACIjB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDxmBK,QC0mBlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDjnBM,SCmnBnB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,cACNzB,IAAK,oCACL4C,QAAS,CDxnBK,QC0nBlB,CACInB,KAAM,cACNzB,IAAK,gCACL4C,QAAS,CDhoBM,SCkoBnB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CDpoBY,OCsoBzB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDtoBK,QCwoBlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD3oBK,QC6oBlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDjpBK,QCmpBlB,CACInB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CAACF,EDnpBS,OCqpBvB,CACIjB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDnqBM,SCqqBnB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CAACF,EDlqBS,OCoqBvB,CACIjB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD5qBY,OC8qBzB,CACInB,KAAM,mBACNzB,IAAK,qCACL4C,QAAS,CDlrBM,SCorBnB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDrrBY,OCurBzB,CACInB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CD1rBY,OC4rBzB,CACInB,KAAM,cACNzB,IAAK,oCACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDnsBK,QCqsBlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDxsBK,QC0sBlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CAACF,ED1sBS,OC4sBvB,CACIjB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDltBK,QCotBlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDvtBK,MCutBIF,IAEtB,CACIjB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD3tBK,QC6tBlB,CACInB,KAAM,wBACNzB,IAAK,0CACL2B,QAAS,CAAC,sBACViB,QAAS,CDpuBY,KAMJ,UCguBrB,CACInB,KAAM,cACNzB,IAAK,gCACL2B,QAAS,CAAC,YACViB,QAAS,CD1uBY,KAMJ,UCsuBrB,CACInB,KAAM,mCACNzB,IAAK,qDACL2B,QAAS,CAAC,iCACViB,QAAS,CDhvBY,KAMJ,UC4uBrB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDtvBM,SCwvBnB,CACInB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CDxvBK,QC0vBlB,CACInB,KAAM,wBACNzB,IAAK,0CACL4C,QAAS,CD5vBK,QC8vBlB,CACInB,KAAM,eACNzB,IAAK,iCACL4C,QAAS,CAACF,ED/vBS,OCiwBvB,CACIjB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDtwBK,QCwwBlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD5wBK,QC8wBlB,CACInB,KAAM,aACNzB,IAAK,+BACL2B,QAAS,CAAC,qBACViB,QAAS,CDrxBM,SCuxBnB,CACInB,KAAM,eACNzB,IAAK,iCACL4C,QAAS,CDtxBK,QCwxBlB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDjyBK,QCmyBlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CDtyBK,QCwyBlB,CACInB,KAAM,kBACNzB,IAAK,wCACL4C,QAAS,CD9yBM,SCgzBnB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD/yBK,QCizBlB,CACInB,KAAM,eACNzB,IAAK,iCACL4C,QAAS,CDpzBK,QCszBlB,CACInB,KAAM,cACNzB,IAAK,gCACL4C,QAAS,CDzzBK,QC2zBlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CD/zBK,QCi0BlB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CDx0BK,QC00BlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CD/0BY,OCi1BzB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CDl1BK,QCo1BlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDx1BK,QC01BlB,CACInB,KAAM,cACNzB,IAAK,8CACL4C,QAAS,CD71BK,QC+1BlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CAACF,ED/1BS,OCi2BvB,CACIjB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CD32BK,QC62BlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,OACNzB,IAAK,yBACL4C,QAAS,CDr3BK,QCu3BlB,CACInB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CD93BM,SCg4BnB,CACInB,KAAM,sBACNzB,IAAK,wCACL4C,QAAS,CDl4BY,KAMJ,UC83BrB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDp4BK,QCs4BlB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CD14BK,MC04BIF,EDv4BC,OCy4BvB,CACIjB,KAAM,eACNzB,IAAK,iCACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDv5BM,SCy5BnB,CACInB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDx5BK,QC05BlB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CD95BK,QCg6BlB,CACInB,KAAM,uBACNzB,IAAK,6CACL2B,QAAS,CAAC,OACViB,QAAS,CAACF,EDj6BS,OCm6BvB,CACIjB,KAAM,iBACNzB,IAAK,uCACL2B,QAAS,CAAC,MACViB,QAAS,CD16BK,QC46BlB,CACInB,KAAM,gBACNzB,IAAK,sCACL2B,QAAS,CAAC,KAAM,MAAO,2BAA4B,UACnDiB,QAAS,CDl7BY,OCo7BzB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDt7BY,OCw7BzB,CACInB,KAAM,aACNzB,IAAK,+BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CDl8BM,SCo8BnB,CACInB,KAAM,eACNzB,IAAK,qCACL2B,QAAS,CAAC,WACViB,QAAS,CDr8BK,QCu8BlB,CACInB,KAAM,YACNzB,IAAK,8BACL4C,QAAS,CD38BY,OC68BzB,CACInB,KAAM,UACNzB,IAAK,4BACL4C,QAAS,CAACF,IAEd,CACIjB,KAAM,QACNzB,IAAK,0BACL4C,QAAS,CAACF,EDj9BS,OCm9BvB,CACIjB,KAAM,SACNzB,IAAK,2BACL4C,QAAS,CDx9BK,QC09BlB,CACInB,KAAM,WACNzB,IAAK,6BACL4C,QAAS,CD79BK,SELTC,EAAW,WACXC,EAAU,UACVC,EAAU,UCqHRC,6MA1GbC,MAAQ,CACNC,WAAYC,EAAKC,kBACjBC,WAAY,GACZC,WAAY,GACZC,MAAOV,KA0BTd,UAAY,SAAA1B,GACV,IAAMmD,EAAQL,EAAKF,MAAMC,WACnBO,EAAUD,EAAM,GAEtBL,EAAKO,SAAS,CACZH,MAAOT,EACPI,WAAU,CAAAtE,OAAA+E,EAAA,EAAA/E,CAAA,GAAQ6E,EAAR,CAAiBpD,aAAjB1C,OAAAiB,OAAA2C,EAAA,EAAA3C,CAA+B4E,EAAMI,MAAM,UAIzDC,OAAS,SAAAxD,GACP,IAAMmD,EAAQL,EAAKF,MAAMC,WACnBO,EAAUD,EAAM,GAEtBL,EAAKO,SAAS,CACZH,MAAOR,EACPG,WAAU,CAAAtE,OAAA+E,EAAA,EAAA/E,CAAA,GAAQ6E,EAAR,CAAiBpD,aAAjB1C,OAAAiB,OAAA2C,EAAA,EAAA3C,CAA+B4E,EAAMI,MAAM,UAIzD5B,OAAS,SAAA3B,GACP,IAAMmD,EAAQL,EAAKF,MAAMC,WACnBO,EAAUD,EAAM,GAEtBL,EAAKO,SAAS,CACZR,WAAU,GAAAvF,OAAAiB,OAAA2C,EAAA,EAAA3C,CAAM4E,EAAMI,MAAM,IAAlB,CAAAhF,OAAA+E,EAAA,EAAA/E,CAAA,GAA2B6E,EAA3B,CAAoCpD,mBAIlDmC,OAAS,SAACsB,GAAY,IAAAC,EACdC,EAAcF,EAAS,aAAe,aAC5CX,EAAKO,UAALK,EAAA,GAAAnF,OAAAqF,EAAA,EAAArF,CAAAmF,EACGC,EADH,GAAArG,OAAAiB,OAAA2C,EAAA,EAAA3C,CACqBuE,EAAKF,MAAMe,IADhC,CAC8Cb,EAAKF,MAAMC,WAAW,MADpEtE,OAAAqF,EAAA,EAAArF,CAAAmF,EAAA,aAEcZ,EAAKF,MAAMC,WAAWU,MAAM,IAF1ChF,OAAAqF,EAAA,EAAArF,CAAAmF,EAAA,QAGSlB,GAHTkB,OAOFG,yBAA2B,WACzB,OAAQf,EAAKF,MAAMM,OACjB,KAAKV,EACH,OACExF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAAC6G,EAAD,CAAUpE,IAAKmD,EAAKF,MAAMC,WAAW,GAAGlD,MACxC3C,EAAAC,EAAAC,cAAC8G,EAAD,CACE3C,KAAMyB,EAAKF,MAAMC,WAAW,GAC5BnB,UAAWoB,EAAKpB,UAChBC,OAAQmB,EAAKnB,OACbC,SAAUkB,EAAKU,UAIvB,KAAKf,EACH,OACEzF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAAC6G,EAAD,CAAUpE,IAAKmD,EAAKF,MAAMC,WAAW,GAAGlD,MACxC3C,EAAAC,EAAAC,cAAC+G,EAAD,CAAY5C,KAAMyB,EAAKF,MAAMC,WAAW,GAAIV,OAAQ,kBAAMW,EAAKX,QAAO,OAG5E,KAAKO,EACH,OACE1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAAC6G,EAAD,CAAUpE,IAAKmD,EAAKF,MAAMC,WAAW,GAAGlD,MACxC3C,EAAAC,EAAAC,cAACgH,EAAD,CAAY7C,KAAMyB,EAAKF,MAAMC,WAAW,GAAIV,OAAQ,kBAAMW,EAAKX,QAAO,0FAtFlD,IAAdgC,EAAcC,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACpBjB,EAAQb,EAGR6B,EAAQ5B,UACVY,EAAQA,EAAMmB,OAAO,SAAAC,GAAI,OAAIA,EAAKhC,QAAQhB,KAAK,SAAAzE,GAAM,OAAIqH,EAAQ5B,QAAQiC,SAAS1H,QAIpF,IAAM2H,EAAOC,KAAKC,SACfC,SAAS,IACTC,UAAU,GASb,OALA1B,GAHAA,EAAQ2B,kBAAQ3B,EAAOsB,IAGTvE,IAAI,SAAA6E,GAAI,OAAAxG,OAAA+E,EAAA,EAAA/E,CAAA,GACjBwG,EADiB,CAEpB/E,QAAS,wCA4EX,OACIhD,EAAAC,EAAAC,cAAA8H,KAAMnB,yBAAN,aAtGWoB,aCMJC,mLATX,OACElI,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACEnC,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnH,IACjCnB,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAW3C,YANrBsC,aCMEM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO7I,EAAAC,EAAAC,cAAC4I,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f0e93891.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Title = styled.h1`\n  font-family: 'Oswald', san-serif;\n  text-align: center;\n  width: 100%;\n`;\n\nconst Instructions = styled.h4`\n  font-style: italic;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n`;\n\nconst GridItem = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  justify-self: center;\n  align-self: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst RegionIcon = ({ region, active }) => {\n  return (\n    <div style={{ opacity: active ? 1 : 0.5 }}>\n      <img src={`regions/${region}_icon.png`} width=\"100%\" />\n    </div>\n  );\n};\n\nconst Region = props => {\n  const onHover = () => {\n    props.onHover(props.region);\n  };\n\n  const onLeave = () => {\n    props.onLeave(props.region);\n  };\n\n  const onClick = e => {\n    e.preventDefault();\n    props.onClick(props.region);\n  };\n\n  return (\n    <GridItem onMouseOver={onHover} onMouseOut={onLeave} onClick={onClick}>\n      {props.active ? (\n        <button className={`ui button circular basic tiny compact active`}>{props.children}</button>\n      ) : (\n        props.children\n      )}\n    </GridItem>\n  );\n};\n\nconst Home = props => {\n  const [region, setRegion] = useState('all');\n  const [hoveredRegion, setHoveredRegion] = useState('all');\n\n  const createRegion = (text, value) => {\n    return (\n      <Region\n        onHover={() => setHoveredRegion(value)}\n        onLeave={() => setHoveredRegion(region)}\n        onClick={() => setRegion(value)}\n        active={region === value}\n      >\n        {text}\n      </Region>\n    );\n  };\n\n  return (\n    <div className=\"ui card centered\">\n      <div className=\"content\">\n        <Title>LEARN YOUR FLAGS</Title>\n      </div>\n      <div className=\"content\">\n        <Instructions>To begin, select a region</Instructions>\n        <Grid>\n          {createRegion('World', 'all')}\n          {createRegion('North America', 'na')}\n          {createRegion('South America', 'sa')}\n          {createRegion('Europe', 'eu')}\n          <RegionIcon region={hoveredRegion} active={hoveredRegion === region} />\n          {createRegion('Africa', 'afr')}\n          {createRegion('Asia', 'asia')}\n          {createRegion('Middle East', 'me')}\n          {createRegion('Oceania', 'ocea')}\n        </Grid>\n        <Link to={'/play'}>\n          <button className=\"fluid ui button primary\">\n            Go\n          </button>\n        </Link>\n        <div class=\"ui horizontal divider\">Or</div>\n        <Instructions>Paste in a code from a previous game</Instructions>\n        <div class=\"ui action input fluid\">\n          <input type=\"text\" placeholder=\"Paste code...\" />\n          <button className=\"ui button\">Go</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FlagWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  min-height: 354px;\n`;\n\nconst FlagCard = ({ url }) => (\n  <FlagWrapper>\n    <div className=\"ui card centered\">\n      <div className=\"image\">\n        <img src={url} />\n      </div>\n    </div>\n  </FlagWrapper>\n);\n\nexport default FlagCard;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Guess = ({ guess }) => (\n  <div className=\"item\">\n    <i class=\"close icon middle aligned\" />\n    <div class=\"content\">{guess}</div>\n  </div>\n);\n\nconst Guesses = ({ guesses }) => {\n  if (guesses.length == 0) return null;\n\n  return (\n    <div class=\"extra content\">\n      <div class=\"ui divided list\">\n        {guesses.map(guess => (\n          <Guess guess={guess} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst CenteredForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst GuessingControls = props => {\n\n  const [guesses, setGuesses] = useState(props.guesses || []);\n  const [guess, setGuess] = useState('');\n\n  const dumbify = input => {\n    const output = input\n      .toLowerCase()\n      .replace(/\\b(the|and|of')\\b/gi, '')\n      .replace(/\\s\\s+/gi, ' ')\n      .trim();\n    return output;\n  };\n\n  const validate = rawInput => {\n    const input = dumbify(rawInput);\n\n    const name = props.data.name;\n    const accepts = props.data.accepts || [];\n\n    const acceptables = [name, ...accepts].map(a => dumbify(a));\n\n    return acceptables.some(acceptable => input == acceptable);\n  }; \n  \n  const onGuess = e => {\n    e.preventDefault();\n\n    if (!guess) return;\n\n    setGuesses([...guesses, guess]);\n\n    if (validate(guess)) {\n      props.onSuccess(guesses);\n      setGuesses([]);\n    }\n\n    setGuess('');\n  };\n\n  const onSkip = e => {\n    e.preventDefault();\n\n    props.onSkip(guesses);\n\n    setGuess('');\n    setGuesses([]);\n  };\n\n  const onGiveUp = e => {\n    e.preventDefault();\n\n    props.onGiveUp(guesses);\n\n    setGuess('');\n    setGuesses([]);\n  };\n\n  return (\n    <div className=\"ui card centered\">\n      <div className=\"content\">\n        <CenteredForm className=\"ui form\">\n          <div className=\"field\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter country name\"\n              autoFocus\n              value={guess}\n              onChange={e => setGuess(e.target.value)}\n            />\n          </div>\n          <div className=\"ui buttons\">\n            <button className=\"ui button primary\" onClick={onGuess}>\n              Guess\n            </button>\n            <button className=\"ui button\" onClick={onSkip}>\n              Skip\n            </button>\n            <button className=\"ui button negative\" onClick={onGiveUp}>\n              Give Up\n            </button>\n          </div>\n        </CenteredForm>\n      </div>\n      <Guesses guesses={guesses} />\n    </div>\n  );\n};\n\nexport default GuessingControls;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SuccessBox = props => {\n\n  const getOrdinal = n => {\n    const s = ['th', 'st', 'nd', 'rd'];\n    const v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  };\n\n  const onNext = e => {\n    e.preventDefault();\n    props.onNext();\n  };\n\n  return (\n    <div className=\"ui card centered\">\n      <div className=\"content\">\n        <span className=\"header\">Correct!</span>\n        <div className=\"description\">\n            You got {props.data.name} correct on your {getOrdinal(props.data.guesses.length + 1)} try.\n        </div>\n\n      </div>\n      <div className=\"extra content\">\n      <button className=\"ui button\" type=\"button\" onClick={onNext} autoFocus>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SuccessBox;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FailureBox = props => {\n\n  const onNext = e => {\n    e.preventDefault();\n    props.onNext();\n  };\n\n  return (\n    <div className=\"ui card centered\">\n      <div className=\"content\">\n        <div className=\"meta\">\n          The correct answer was...\n        </div>\n        <span className=\"header\">{props.data.name}</span>\n      </div>\n      <div className=\"extra content\">\n        <button className=\"ui button\" type=\"button\" onClick={onNext} autoFocus>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FailureBox;\n","export const ALL = 'all';\nexport const OCEANIA = 'ocea';\nexport const NORTH_AMERICA = 'na';\nexport const SOUTH_AMERICA = 'sa';\nexport const EUROPE = 'eur';\nexport const AFRICA = 'afr';\nexport const ASIA = 'asia';\nexport const MIDDLE_EAST = 'me';\nexport const CARIBBEAN = 'carib';","import { NORTH_AMERICA, SOUTH_AMERICA, EUROPE, AFRICA, ASIA, OCEANIA, MIDDLE_EAST, CARIBBEAN } from './regions';\n\nconst FLAG_DATA = [\n    {\n        name: 'Afghanistan',\n        url: 'flags/Flag_of_Afghanistan.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Albania',\n        url: 'flags/Flag_of_Albania.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Algeria',\n        url: 'flags/Flag_of_Algeria.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Andorra',\n        url: 'flags/Flag_of_Andorra.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Angola',\n        url: 'flags/Flag_of_Angola.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Antigua and Barbuda',\n        url: 'flags/Flag_of_Antigua_and_Barbuda.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Argentina',\n        url: 'flags/Flag_of_Argentina.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Armenia',\n        url: 'flags/Flag_of_Armenia.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Australia',\n        url: 'flags/Flag_of_Australia_%28converted%29.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Austria',\n        url: 'flags/Flag_of_Austria.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Azerbaijan',\n        url: 'flags/Flag_of_Azerbaijan.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Bahamas',\n        url: 'flags/Flag_of_the_Bahamas.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Bahrain',\n        url: 'flags/Flag_of_Bahrain.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Bangladesh',\n        url: 'flags/Flag_of_Bangladesh.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Barbados',\n        url: 'flags/Flag_of_Barbados.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Belarus',\n        url: 'flags/Flag_of_Belarus.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Belgium',\n        url: 'flags/Flag_of_Belgium_%28civil%29.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Belize',\n        url: 'flags/Flag_of_Belize.svg',\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Benin',\n        url: 'flags/Flag_of_Benin.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Bhutan',\n        url: 'flags/Flag_of_Bhutan.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Bolivia',\n        url: 'flags/Flag_of_Bolivia_%28state%29.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Bosnia and Herzegovina',\n        url: 'flags/Flag_of_Bosnia_and_Herzegovina.svg',\n        accepts: ['Bosnia'],\n        regions: [EUROPE]\n    },\n    {\n        name: 'Botswana',\n        url: 'flags/Flag_of_Botswana.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Brazil',\n        url: 'flags/Flag_of_Brazil.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Brunei',\n        url: 'flags/Flag_of_Brunei.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Bulgaria',\n        url: 'flags/Flag_of_Bulgaria.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Burkina Faso',\n        url: 'flags/Flag_of_Burkina_Faso.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Burundi',\n        url: 'flags/Flag_of_Burundi.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Cambodia',\n        url: 'flags/Flag_of_Cambodia.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Cameroon',\n        url: 'flags/Flag_of_Cameroon.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Canada',\n        url: 'flags/Flag_of_Canada.svg',\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Cape Verde',\n        url: 'flags/Flag_of_Cape_Verde.svg',\n        accepts: ['Cabo Verde'],\n        regions: [AFRICA]\n    },\n    {\n        name: 'Central African Republic',\n        url: 'flags/Flag_of_the_Central_African_Republic.svg',\n        accepts: ['CAR'],\n        regions: [AFRICA]\n    },\n    {\n        name: 'Chad',\n        url: 'flags/Flag_of_Chad.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Chile',\n        url: 'flags/Flag_of_Chile.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'China',\n        url: 'flags/Flag_of_the_People%27s_Republic_of_China.svg',\n        accepts: [\"People's Republic of China\"],\n        regions: [ASIA]\n    },\n    {\n        name: 'Colombia',\n        url: 'flags/Flag_of_Colombia.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Comoros',\n        url: 'flags/Flag_of_the_Comoros.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Democratic Republic of the Congo',\n        url: 'flags/Flag_of_the_Democratic_Republic_of_the_Congo.svg',\n        accepts: ['DRC'],\n        regions: [AFRICA]\n    },\n    {\n        name: 'Republic of the Congo',\n        url: 'flags/Flag_of_the_Republic_of_the_Congo.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Costa Rica',\n        url: 'flags/Flag_of_Costa_Rica.svg',\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Croatia',\n        url: 'flags/Flag_of_Croatia.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Cuba',\n        url: 'flags/Flag_of_Cuba.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Cyprus',\n        url: 'flags/Flag_of_Cyprus.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Czech Republic',\n        url: 'flags/Flag_of_the_Czech_Republic.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Denmark',\n        url: 'flags/Flag_of_Denmark.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Djibouti',\n        url: 'flags/Flag_of_Djibouti.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Dominica',\n        url: 'flags/Flag_of_Dominica.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Dominican Republic',\n        url: 'flags/Flag_of_the_Dominican_Republic.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'East Timor',\n        url: 'flags/Flag_of_East_Timor.svg',\n        accepts: ['Timor Leste'],\n        regions: [ASIA]\n    },\n    {\n        name: 'Ecuador',\n        url: 'flags/Flag_of_Ecuador.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Egypt',\n        url: 'flags/Flag_of_Egypt.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'El Salvador',\n        url: 'flags/Flag_of_El_Salvador.svg',\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Equatorial Guinea',\n        url: 'flags/Flag_of_Equatorial_Guinea.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Eritrea',\n        url: 'flags/Flag_of_Eritrea.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Estonia',\n        url: 'flags/Flag_of_Estonia.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Ethiopia',\n        url: 'flags/Flag_of_Ethiopia.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Fiji',\n        url: 'flags/Flag_of_Fiji.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Finland',\n        url: 'flags/Flag_of_Finland.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'France',\n        url: 'flags/Flag_of_France.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Gabon',\n        url: 'flags/Flag_of_Gabon.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Gamiba',\n        url: 'flags/Flag_of_The_Gambia.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Georgia',\n        url: 'flags/Flag_of_Georgia.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Germany',\n        url: 'flags/Flag_of_Germany.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Ghana',\n        url: 'flags/Flag_of_Ghana.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Greece',\n        url: 'flags/Flag_of_Greece.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Grenada',\n        url: 'flags/Flag_of_Grenada.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Guatemala',\n        url: 'flags/Flag_of_Guatemala.svg',\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Guinea',\n        url: 'flags/Flag_of_Guinea.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Guinea-Bissau',\n        url: 'flags/Flag_of_Guinea-Bissau.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Guyana',\n        url: 'flags/Flag_of_Guyana.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Haiti',\n        url: 'flags/Flag_of_Haiti.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Honduras',\n        url: 'flags/Flag_of_Honduras.svg',\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Hungary',\n        url: 'flags/Flag_of_Hungary.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Iceland',\n        url: 'flags/Flag_of_Iceland.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'India',\n        url: 'flags/Flag_of_India.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Indonesia',\n        url: 'flags/Flag_of_Indonesia.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Iran',\n        url: 'flags/Flag_of_Iran.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Iraq',\n        url: 'flags/Flag_of_Iraq.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Ireland',\n        url: 'flags/Flag_of_Ireland.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Israel',\n        url: 'flags/Flag_of_Israel.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Italy',\n        url: 'flags/Flag_of_Italy.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: \"Côte d'Ivoire\",\n        url: 'flags/Flag_of_C%C3%B4te_d%27Ivoire.svg',\n        accepts: ['Ivory Coast', \"Cote d'Ivoire\"],\n        regions: [AFRICA]\n    },\n    {\n        name: 'Jamaica',\n        url: 'flags/Flag_of_Jamaica.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Japan',\n        url: 'flags/Flag_of_Japan.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Jordan',\n        url: 'flags/Flag_of_Jordan.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Kazakhstan',\n        url: 'flags/Flag_of_Kazakhstan.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Kenya',\n        url: 'flags/Flag_of_Kenya.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Kiribati',\n        url: 'flags/Flag_of_Kiribati.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'North Korea',\n        url: 'flags/Flag_of_North_Korea.svg',\n        accepts: [\"Democratic People's Republic of Korea\", 'Best Korea', 'True Korea', 'Perfect Nation'],\n        regions: [ASIA]\n    },\n    {\n        name: 'South Korea',\n        url: 'flags/Flag_of_South_Korea.svg',\n        accepts: ['Republic of Korea'],\n        regions: [ASIA]\n    },\n    {\n        name: 'Kuwait',\n        url: 'flags/Flag_of_Kuwait.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Kyrgyzstan',\n        url: 'flags/Flag_of_Kyrgyzstan.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Laos',\n        url: 'flags/Flag_of_Laos.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Latvia',\n        url: 'flags/Flag_of_Latvia.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Lebanon',\n        url: 'flags/Flag_of_Lebanon.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Lesotho',\n        url: 'flags/Flag_of_Lesotho.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Liberia',\n        url: 'flags/Flag_of_Liberia.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Libya',\n        url: 'flags/Flag_of_Libya.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Liechtenstein',\n        url: 'flags/Flag_of_Liechtenstein.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Lithuania',\n        url: 'flags/Flag_of_Lithuania.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Luxembourg',\n        url: 'flags/Flag_of_Luxembourg.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Macedonia',\n        url: 'flags/Flag_of_Macedonia.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Madagascar',\n        url: 'flags/Flag_of_Madagascar.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Malawi',\n        url: 'flags/Flag_of_Malawi.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Malaysia',\n        url: 'flags/Flag_of_Malaysia.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Maldives',\n        url: 'flags/Flag_of_Maldives.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Mali',\n        url: 'flags/Flag_of_Mali.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Malta',\n        url: 'flags/Flag_of_Malta.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Marshall Islands',\n        url: 'flags/Flag_of_the_Marshall_Islands.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Mauritania',\n        url: 'flags/Flag_of_Mauritania.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Mauritius',\n        url: 'flags/Flag_of_Mauritius.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Mexico',\n        url: 'flags/Flag_of_Mexico.svg',\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Micronesia',\n        url: 'flags/Flag_of_the_Federated_States_of_Micronesia.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Moldova',\n        url: 'flags/Flag_of_Moldova.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Monaco',\n        url: 'flags/Flag_of_Monaco.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Mongolia',\n        url: 'flags/Flag_of_Mongolia.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Montenegro',\n        url: 'flags/Flag_of_Montenegro.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Morocco',\n        url: 'flags/Flag_of_Morocco.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Mozambique',\n        url: 'flags/Flag_of_Mozambique.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Myanmar',\n        url: 'flags/Flag_of_Myanmar.svg',\n        accepts: ['Burma'],\n        regions: [ASIA]\n    },\n    {\n        name: 'Namibia',\n        url: 'flags/Flag_of_Namibia.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Nauru',\n        url: 'flags/Flag_of_Nauru.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Nepal',\n        url: 'flags/Flag_of_Nepal.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Netherlands',\n        url: 'flags/Flag_of_the_Netherlands.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'New Zealand',\n        url: 'flags/Flag_of_New_Zealand.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Nicaragua',\n        url: 'flags/Flag_of_Nicaragua.svg',\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Niger',\n        url: 'flags/Flag_of_Niger.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Nigeria',\n        url: 'flags/Flag_of_Nigeria.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Norway',\n        url: 'flags/Flag_of_Norway.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Oman',\n        url: 'flags/Flag_of_Oman.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Pakistan',\n        url: 'flags/Flag_of_Pakistan.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Palau',\n        url: 'flags/Flag_of_Palau.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Palestine',\n        url: 'flags/Flag_of_Palestine.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Panama',\n        url: 'flags/Flag_of_Panama.svg',\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Papua New Guinea',\n        url: 'flags/Flag_of_Papua_New_Guinea.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Paraguay',\n        url: 'flags/Flag_of_Paraguay.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Peru',\n        url: 'flags/Flag_of_Peru.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Philippines',\n        url: 'flags/Flag_of_the_Philippines.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Poland',\n        url: 'flags/Flag_of_Poland.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Portugal',\n        url: 'flags/Flag_of_Portugal.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Qatar',\n        url: 'flags/Flag_of_Qatar.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Romania',\n        url: 'flags/Flag_of_Romania.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Russia',\n        url: 'flags/Flag_of_Russia.svg',\n        regions: [EUROPE, ASIA]\n    },\n    {\n        name: 'Rwanda',\n        url: 'flags/Flag_of_Rwanda.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Saint Kitts and Nevis',\n        url: 'flags/Flag_of_Saint_Kitts_and_Nevis.svg',\n        accepts: ['St Kitts and Nevis'],\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Saint Lucia',\n        url: 'flags/Flag_of_Saint_Lucia.svg',\n        accepts: ['St Lucia'],\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Saint Vincent and the Grenadines',\n        url: 'flags/Flag_of_Saint_Vincent_and_the_Grenadines.svg',\n        accepts: ['St Vincent and the Grenadines'],\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Samoa',\n        url: 'flags/Flag_of_Samoa.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'San Marino',\n        url: 'flags/Flag_of_San_Marino.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Sao Tome and Principe',\n        url: 'flags/Flag_of_Sao_Tome_and_Principe.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Saudi Arabia',\n        url: 'flags/Flag_of_Saudi_Arabia.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Senegal',\n        url: 'flags/Flag_of_Senegal.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Serbia',\n        url: 'flags/Flag_of_Serbia.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Seychelles',\n        url: 'flags/Flag_of_Seychelles.svg',\n        accepts: ['Seychelle Islands'],\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Sierra Leone',\n        url: 'flags/Flag_of_Sierra_Leone.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Singapore',\n        url: 'flags/Flag_of_Singapore.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Slovakia',\n        url: 'flags/Flag_of_Slovakia.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Slovenia',\n        url: 'flags/Flag_of_Slovenia.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Solomon Islands',\n        url: 'flags/Flag_of_the_Solomon_Islands.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Somalia',\n        url: 'flags/Flag_of_Somalia.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'South Africa',\n        url: 'flags/Flag_of_South_Africa.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'South Sudan',\n        url: 'flags/Flag_of_South_Sudan.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Spain',\n        url: 'flags/Flag_of_Spain.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Sri Lanka',\n        url: 'flags/Flag_of_Sri_Lanka.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Sudan',\n        url: 'flags/Flag_of_Sudan.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Suriname',\n        url: 'flags/Flag_of_Suriname.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Swaziland',\n        url: 'flags/Flag_of_Swaziland.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Sweden',\n        url: 'flags/Flag_of_Sweden.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Switzerland',\n        url: 'flags/Flag_of_Switzerland_%28Pantone%29.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'Syria',\n        url: 'flags/Flag_of_Syria.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Tajikistan',\n        url: 'flags/Flag_of_Tajikistan.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Tanzania',\n        url: 'flags/Flag_of_Tanzania.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Thailand',\n        url: 'flags/Flag_of_Thailand.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Togo',\n        url: 'flags/Flag_of_Togo.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Tonga',\n        url: 'flags/Flag_of_Tonga.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Trinidad and Tobago',\n        url: 'flags/Flag_of_Trinidad_and_Tobago.svg',\n        regions: [NORTH_AMERICA, CARIBBEAN]\n    },\n    {\n        name: 'Tunisia',\n        url: 'flags/Flag_of_Tunisia.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Turkey',\n        url: 'flags/Flag_of_Turkey.svg',\n        regions: [EUROPE, ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Turkmenistan',\n        url: 'flags/Flag_of_Turkmenistan.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Tuvalu',\n        url: 'flags/Flag_of_Tuvalu.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Uganda',\n        url: 'flags/Flag_of_Uganda.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Ukraine',\n        url: 'flags/Flag_of_Ukraine.svg',\n        regions: [EUROPE]\n    },\n    {\n        name: 'United Arab Emirates',\n        url: 'flags/Flag_of_the_United_Arab_Emirates.svg',\n        accepts: ['UAE'],\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'United Kingdom',\n        url: 'flags/Flag_of_the_United_Kingdom.svg',\n        accepts: ['UK'],\n        regions: [EUROPE]\n    },\n    {\n        name: 'United States',\n        url: 'flags/Flag_of_the_United_States.svg',\n        accepts: ['US', 'USA', 'United States of America', 'Murica'],\n        regions: [NORTH_AMERICA]\n    },\n    {\n        name: 'Uruguay',\n        url: 'flags/Flag_of_Uruguay.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Uzbekistan',\n        url: 'flags/Flag_of_Uzbekistan.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Vanuatu',\n        url: 'flags/Flag_of_Vanuatu.svg',\n        regions: [OCEANIA]\n    },\n    {\n        name: 'Vatican City',\n        url: 'flags/Flag_of_the_Vatican_City.svg',\n        accepts: ['Vatican'],\n        regions: [EUROPE]\n    },\n    {\n        name: 'Venezuela',\n        url: 'flags/Flag_of_Venezuela.svg',\n        regions: [SOUTH_AMERICA]\n    },\n    {\n        name: 'Vietnam',\n        url: 'flags/Flag_of_Vietnam.svg',\n        regions: [ASIA]\n    },\n    {\n        name: 'Yemen',\n        url: 'flags/Flag_of_Yemen.svg',\n        regions: [ASIA, MIDDLE_EAST]\n    },\n    {\n        name: 'Zambia',\n        url: 'flags/Flag_of_Zambia.svg',\n        regions: [AFRICA]\n    },\n    {\n        name: 'Zimbabwe',\n        url: 'flags/Flag_of_Zimbabwe.svg',\n        regions: [AFRICA]\n    }\n];\n\nexport const FLAG_DATA_NON_UN = [\n    {\n        name: 'Abkhazia',\n        url: 'flags/Flag_of_Abkhazia.svg'\n    },\n    {\n        name: 'Kosovo',\n        url: 'flags/Flag_of_Kosovo.svg'\n    },\n    {\n        name: 'Taiwan',\n        url: 'flags/Flag_of_the_Republic_of_China.svg',\n        accepts: ['Republic of China', 'RoC']\n    }\n];\n\nexport const FLAG_DATA_UK = [\n    {\n        name: 'England',\n        url: 'flags/Flag_of_England.svg'\n    },\n    {\n        name: 'Scotland',\n        url: 'flags/Flag_of_Scotland.svg'\n    },\n    {\n        name: 'Wales',\n        url: 'flags/Flag_of_Wales_2.svg'\n    }\n];\n\nexport default FLAG_DATA;\n","export const GUESSING = 'GUESSING';\nexport const SUCCESS = 'SUCCESS';\nexport const GIVE_UP = 'GIVE_UP';\nexport const SUMMARY = 'SUMMARY';","import React, { Component } from 'react';\nimport { shuffle } from 'shuffle-seed';\nimport styled from 'styled-components';\n\nimport FlagCard from '../components/FlagCard';\nimport GuessingControls from '../components/GuessingControls';\nimport SuccessBox from '../components/SuccessBox';\nimport FailureBox from '../components/FailureBox';\n\nimport FLAG_DATA from '../constants/FLAG_DATA';\nimport { GUESSING, SUCCESS, GIVE_UP, SUMMARY } from '../constants/stages';\n\nclass Game extends Component {\n  state = {\n    doingStack: this.initializeStack(),\n    rightStack: [],\n    wrongStack: [],\n    stage: GUESSING\n  };\n\n  initializeStack(options = {}) {\n    let stack = FLAG_DATA;\n\n    // filter regions\n    if (options.regions) {\n      stack = stack.filter(flag => flag.regions.some(region => options.regions.includes(region)));\n    }\n\n    // shuffle using random seed\n    const seed = Math.random()\n      .toString(36)\n      .substring(7);\n    stack = shuffle(stack, seed);\n\n    // initialize game things\n    stack = stack.map(item => ({\n      ...item,\n      guesses: []\n    }));\n\n    return stack;\n  }\n\n  onSuccess = guesses => {\n    const stack = this.state.doingStack;\n    const current = stack[0];\n\n    this.setState({\n      stage: SUCCESS,\n      doingStack: [{ ...current, guesses }, ...stack.slice(1)]\n    });\n  };\n\n  onFail = guesses => {\n    const stack = this.state.doingStack;\n    const current = stack[0];\n\n    this.setState({\n      stage: GIVE_UP,\n      doingStack: [{ ...current, guesses }, ...stack.slice(1)]\n    });\n  };\n\n  onSkip = guesses => {\n    const stack = this.state.doingStack;\n    const current = stack[0];\n\n    this.setState({\n      doingStack: [...stack.slice(1), { ...current, guesses }]\n    });\n  };\n\n  onNext = (success) => {\n    const moveToStack = success? 'rightStack' : 'wrongStack';\n    this.setState({\n      [moveToStack]: [...this.state[moveToStack], this.state.doingStack[0]],\n      doingStack: this.state.doingStack.slice(1),\n      stage: GUESSING\n    });\n  };\n\n  convertStageToComponents = () => {\n    switch (this.state.stage) {\n      case GUESSING:\n        return (\n          <>\n            <FlagCard url={this.state.doingStack[0].url} />\n            <GuessingControls\n              data={this.state.doingStack[0]}\n              onSuccess={this.onSuccess}\n              onSkip={this.onSkip}\n              onGiveUp={this.onFail}\n            />\n          </>\n        );\n      case SUCCESS:\n        return (\n          <>\n            <FlagCard url={this.state.doingStack[0].url} />\n            <SuccessBox data={this.state.doingStack[0]} onNext={() => this.onNext(true)} />\n          </>\n        );\n      case GIVE_UP:\n        return (\n          <>\n            <FlagCard url={this.state.doingStack[0].url} />\n            <FailureBox data={this.state.doingStack[0]} onNext={() => this.onNext(false)} />\n          </>\n        );\n    }\n  };\n\n  render() {\n    return (\n        <this.convertStageToComponents />\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Home from '../components/Home';\nimport Game from './Game';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/play\" component={Game} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}